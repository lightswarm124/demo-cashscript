import RpcClientRetry from 'bitcoin-rpc-promise-retry';
export default class BitcoinRpcNetworkProvider {
    constructor(network, url, opts) {
        this.network = network;
        this.rpcClient = new RpcClientRetry(url, opts);
    }
    async getUtxos(address) {
        const result = await this.rpcClient.listUnspent(0, 9999999, [address]);
        const utxos = result.map((utxo) => ({
            txid: utxo.txid,
            vout: utxo.vout,
            satoshis: BigInt(utxo.amount * 1e8),
        }));
        return utxos;
    }
    async getBlockHeight() {
        return this.rpcClient.getBlockCount();
    }
    async getRawTransaction(txid) {
        return this.rpcClient.getRawTransaction(txid);
    }
    async sendRawTransaction(txHex) {
        return this.rpcClient.sendRawTransaction(txHex);
    }
    getClient() {
        return this.rpcClient;
    }
}
//# sourceMappingURL=BitcoinRpcNetworkProvider.js.map