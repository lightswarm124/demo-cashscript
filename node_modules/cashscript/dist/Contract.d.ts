import { Artifact, Script } from '@cashscript/utils';
import { Transaction } from './Transaction.js';
import { Argument } from './Argument.js';
import { Unlocker, ContractOptions, Utxo } from './interfaces.js';
import NetworkProvider from './network/NetworkProvider.js';
export declare class Contract {
    private artifact;
    private options?;
    name: string;
    address: string;
    tokenAddress: string;
    bytecode: string;
    bytesize: number;
    opcount: number;
    functions: Record<string, ContractFunction>;
    unlock: Record<string, ContractUnlocker>;
    redeemScript: Script;
    provider: NetworkProvider;
    private addressType;
    constructor(artifact: Artifact, constructorArgs: Argument[], options?: ContractOptions | undefined);
    getBalance(): Promise<bigint>;
    getUtxos(): Promise<Utxo[]>;
    private createFunction;
    private createUnlocker;
}
export declare type ContractFunction = (...args: Argument[]) => Transaction;
export declare type ContractUnlocker = (...args: Argument[]) => Unlocker;
