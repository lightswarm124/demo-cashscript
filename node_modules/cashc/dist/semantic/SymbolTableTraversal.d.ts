import { ContractNode, ParameterNode, VariableDefinitionNode, FunctionDefinitionNode, IdentifierNode, BlockNode, Node, FunctionCallNode, InstantiationNode, AssignNode, TupleAssignmentNode } from '../ast/AST.js';
import AstTraversal from '../ast/AstTraversal.js';
export default class SymbolTableTraversal extends AstTraversal {
    private symbolTables;
    private functionNames;
    private currentFunction;
    private expectedSymbolType;
    visitContract(node: ContractNode): Node;
    visitParameter(node: ParameterNode): Node;
    visitFunctionDefinition(node: FunctionDefinitionNode): Node;
    visitBlock(node: BlockNode): Node;
    visitVariableDefinition(node: VariableDefinitionNode): Node;
    visitAssign(node: AssignNode): Node;
    visitTupleAssignment(node: TupleAssignmentNode): Node;
    visitFunctionCall(node: FunctionCallNode): Node;
    visitInstantiation(node: InstantiationNode): Node;
    visitIdentifier(node: IdentifierNode): Node;
}
