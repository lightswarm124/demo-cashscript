import { AssignNode, BranchNode, CastNode, FunctionCallNode, UnaryOpNode, BinaryOpNode, IdentifierNode, TimeOpNode, VariableDefinitionNode, ArrayNode, TupleIndexOpNode, RequireNode, Node, InstantiationNode, TupleAssignmentNode, NullaryOpNode } from '../ast/AST.js';
import AstTraversal from '../ast/AstTraversal.js';
export default class TypeCheckTraversal extends AstTraversal {
    visitVariableDefinition(node: VariableDefinitionNode): Node;
    visitTupleAssignment(node: TupleAssignmentNode): Node;
    visitAssign(node: AssignNode): Node;
    visitTimeOp(node: TimeOpNode): Node;
    visitRequire(node: RequireNode): Node;
    visitBranch(node: BranchNode): Node;
    visitCast(node: CastNode): Node;
    visitFunctionCall(node: FunctionCallNode): Node;
    visitInstantiation(node: InstantiationNode): Node;
    visitTupleIndexOp(node: TupleIndexOpNode): Node;
    visitBinaryOp(node: BinaryOpNode): Node;
    visitUnaryOp(node: UnaryOpNode): Node;
    visitNullaryOp(node: NullaryOpNode): Node;
    visitArray(node: ArrayNode): Node;
    visitIdentifier(node: IdentifierNode): Node;
}
