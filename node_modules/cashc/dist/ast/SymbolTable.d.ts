import { Type } from '@cashscript/utils';
import { VariableDefinitionNode, ParameterNode, IdentifierNode, Node } from './AST.js';
export declare class Symbol {
    name: string;
    type: Type;
    symbolType: SymbolType;
    definition?: Node | undefined;
    parameters?: Type[] | undefined;
    references: IdentifierNode[];
    private constructor();
    static variable(node: VariableDefinitionNode | ParameterNode): Symbol;
    static global(name: string, type: Type): Symbol;
    static function(name: string, type: Type, parameters: Type[]): Symbol;
    static class(name: string, type: Type, parameters: Type[]): Symbol;
    toString(): string;
}
export declare enum SymbolType {
    VARIABLE = "variable",
    FUNCTION = "function",
    CLASS = "class"
}
export declare class SymbolTable {
    parent?: SymbolTable | undefined;
    symbols: Map<String, Symbol>;
    constructor(parent?: SymbolTable | undefined);
    set(symbol: Symbol): void;
    get(name: string): Symbol | undefined;
    getFromThis(name: string): Symbol | undefined;
    toString(): string;
    unusedSymbols(): Symbol[];
}
